// Overrides bootstrap functions to add prfx support

@mixin make-grid-columns($i: 1, $list: ".#{$prfx}col-xs-#{$i}, .#{$prfx}col-sm-#{$i}, .#{$prfx}col-md-#{$i}, .#{$prfx}col-lg-#{$i}") {
  @for $i from (1 + 1) through $grid-columns {
    $list: "#{$list}, .#{$prfx}col-xs-#{$i}, .#{$prfx}col-sm-#{$i}, .#{$prfx}col-md-#{$i}, .#{$prfx}col-lg-#{$i}";
  }
  #{$list} {
    // Prevent columns from collapsing when empty
    min-height: 1px;
    // Inner gutter via padding
    padding-left:  ($grid-gutter-width / 2);
    padding-right: ($grid-gutter-width / 2);
  }
}

@mixin float-grid-columns($class, $i: 1, $list: ".#{$prfx}col-#{$class}-#{$i}") {
  @for $i from (1 + 1) through $grid-columns {
    $list: "#{$list}, .#{$prfx}col-#{$class}-#{$i}";
  }
  #{$list} {
    float: left;
  }
}

@mixin calc-grid-column($index, $class, $type) {
  @if ($type == width) and ($index > 0) {
    .#{$prfx}col-#{$class}-#{$index} {
      width: percentage(($index / $grid-columns));
    }
  }
  @if ($type == push) and ($index > 0) {
    .#{$prfx}col-#{$class}-push-#{$index} {
      left: percentage(($index / $grid-columns));
    }
  }
  @if ($type == push) and ($index == 0) {
    .#{$prfx}col-#{$class}-push-0 {
      left: auto;
    }
  }
  @if ($type == pull) and ($index > 0) {
    .#{$prfx}col-#{$class}-pull-#{$index} {
      right: percentage(($index / $grid-columns));
    }
  }
  @if ($type == pull) and ($index > 0) {
    .#{$prfx}col-#{$class}-pull-#{$index} {
      right: percentage(($index / $grid-columns));
    }
  }
  @if ($type == pull) and ($index == 0) {
    .#{$prfx}col-#{$class}-pull-0 {
      right: auto;
    }
  }
  @if ($type == offset) {
    .#{$prfx}col-#{$class}-offset-#{$index} {
      margin-left: percentage(($index / $grid-columns));
    }
  }
}
